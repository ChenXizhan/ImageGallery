

案例研究: JavaScript美术馆 —— 用HTML和javasc建立一个图片库

这是我读《DOM Scripting》一书时，摘取的其中的案例，我做了少许的改动。此书作者 【英】 Jeremy Keith
感谢作者的这本书，这是一本很好的入门书籍。感谢 Jeremy Keith，他是我步入JavaScript世界的领路人。



1.分析
	把一些图片发布到网上的方法很多，最容易想到的办法就是把所有的图片都放在一个网页里。但是，当图片越来越多的时候，页面会变得很庞大而失去吸引力，并且，数据量越大，网页的下载时间越长，但是愿意等很长时间去下载一个网页的人却没有几个。

	考虑到这些，一个更好的方案是，为每一个图片建立一个网页，这样，图片库将是许多尺寸合理，便于下载和浏览的页面。但是，为每张图片建立一个网页会耗费很多时间和精力，其次，需要为每个网页提供一些链接，以便人们从当前位置转移到其它位置。

	一个两全其美的办法是，利用javascript创建图片库：把整个图片库的浏览链接直接放在图片库主页里，只在用户点击了主页里的某个图片链接时才把图片传送给他。

2.实现
准备材料：找来了一些图片，把他们修剪为适合浏览器查看的尺寸 400*300 像素（但是我没有修改）
编写html文档，用无序列表列出链接.在浏览器窗口中点击某个链接就可以转到相应的图片，但是要从图片回到主页目前还必须借助于浏览器的返回按钮。

3.现在这个网页已经不错了，但是，还有可以改进的地方。
	* 当点击某个链接时，我希望能留在当前页面而不是转到另一个窗口
	* 当点击某个链接是，我希望能在这个页面上同时看到那张图片以及原有的图片清单。
下面是为了实现这些功能所做的改进：
	* 通过增加一个“占位符”图片，在主页上为图片预留一个浏览区域
	* 在点击某个链接时，将拦截网页的默认行为
	* 在点击某个链接时，把“占位符”图片替换为与链接相对应的图片
首先解决占位符图片的问题，在文档末尾添加一个链接，指向占位符图片，并给该图片设置一个id，以便在CSS中针对该图骗设置显示效果，同时，可以在javascript中使用这个id值.
（现在，html文档已经准备好了，接下来的工作是编写一些必要的html文档。)
然后，编写一个javascript函数，当点击链接时，将占位符图片的src属性设置为链接指向的值。并且，把该函数放在一个javascript文件中，在html页面中引用该文件,函数命名为showPic(),文件命名为 showPic.js，并将showouPic.js放在新建的scripts文件夹下.下面，在html文件中引入该javascript脚本文件，并用onclick事件调用showPic（）函数。

4.现在，在同一个网页上切换不同的图片并不是什么新鲜事，在这种情况下，想要让自己与众不同，就必须另辟蹊径，比如，在同一个页面上切换显示不同的文本。
这就是下一步所要做的事情，在我的图片库文档里，每个图片链接都有一个title属性，我想把这个属性值提取出来，并让它们伴随相应的图片一同显示在网页上。第一，为要显示的文本安排位置，所以，在文件里增加一个新的文本段，并给出一个id，第二，更改showPic（）函数的代码，使其具有更多的功能。
顺便，添加一个样式表，命名为layout.css,放在styles子目录里。

5.现在，gallery.html有一个问题，需要使Javascript与之彻底分离开，而onclick事件属性的使用使得分离并不彻底，所以，现在，分离。
	在javascript文件中利用 element.event=action... 将事件添加到某个HTML元素上，具体该文档，添加方法是
			var links = document.getElementsByTagName("a");
			for (var i=0;i<links.length;i++){
				if(links[i].getAttribute("class") == "popup"){
					links[i].onclick=function(){
						showPic(this);
						return false;
					}
				}

			}

	同时，要确保该段代码在文档加载完成后在执行，所以，利用DOM的window.onload事件达到目的（在文档加载完成后，会触发widow的onload事件）。将上面的代码放在函数里，将函数添加到window的onload事件上去。

		function prepareLinks(){
			var links = document.getElementsByTagName("a");
			for (var i=0;i<links.length;i++){
				if(links[i].getAttribute("class") == "popup"){
					links[i].onclick=function(){
						showPic(this);
						return false;
					}
				}

			}
		}

		window.onload=prepareLinks;
	现在可以去掉链接中的onclick事件属性了，然后，为每个链接添上一个class属性，class = "popup"

6. 上面的方式虽然将javascript分离了，但是给每个链接都加上class属性显然很麻烦，另外，也没有对用到的方法进行检查，万一浏览器不支持某个方法，就会导致错误。
	先解决第一个问题，注意到所有的图片链接都位于一个列表ul内，我可以个ul加上一个id='image-gallery',在javaScript中利用document.getElementById()方法获得列表元素，然后用getElementsByTagName("a")获得列表内所有链接，遍历添加onclick事件属性。

	第二个，添加一些检查项。


